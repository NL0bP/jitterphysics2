"use strict";(self.webpackChunkjitterphysics=self.webpackChunkjitterphysics||[]).push([[849],{6164:e=>{e.exports=JSON.parse('{"version":{"pluginId":"default","version":"current","label":"Next","banner":null,"badge":false,"noIndex":false,"className":"docs-version-current","isLast":true,"docsSidebars":{"tutorialSidebar":[{"type":"link","label":"Jitter Physics 2","href":"/docs/intro","docId":"intro","unlisted":false},{"type":"category","label":"Quickstart","collapsible":true,"collapsed":true,"items":[{"type":"link","label":"Project Setup","href":"/docs/quickstart/project-setup","docId":"quickstart/project-setup","unlisted":false},{"type":"link","label":"Setting Up a Render Loop","href":"/docs/quickstart/render-loop","docId":"quickstart/render-loop","unlisted":false},{"type":"link","label":"Hello World","href":"/docs/quickstart/hello-world","docId":"quickstart/hello-world","unlisted":false}],"href":"/docs/category/quickstart"},{"type":"category","label":"Documentation","collapsible":true,"collapsed":true,"items":[{"type":"link","label":"Unmanaged Memory","href":"/docs/documentation/00unmanaged-memory","docId":"documentation/00unmanaged-memory","unlisted":false},{"type":"link","label":"World Entities","href":"/docs/documentation/01world-entities","docId":"documentation/01world-entities","unlisted":false},{"type":"link","label":"Simulation Step","href":"/docs/documentation/02simulation-step","docId":"documentation/02simulation-step","unlisted":false},{"type":"link","label":"Ray Casting","href":"/docs/documentation/03raycasting","docId":"documentation/03raycasting","unlisted":false},{"type":"link","label":"Contact Generation","href":"/docs/documentation/04contact-generation","docId":"documentation/04contact-generation","unlisted":false}],"href":"/docs/category/documentation"},{"type":"category","label":"Jitter Demo","collapsible":true,"collapsed":true,"items":[{"type":"link","label":"Overview","href":"/docs/demo/jitterdemo","docId":"demo/jitterdemo","unlisted":false}],"href":"/docs/category/jitter-demo"},{"type":"link","label":"Web demo","href":"/docs/webasm","docId":"webasm","unlisted":false},{"type":"link","label":"Changelog","href":"/docs/changelog","docId":"changelog","unlisted":false}]},"docs":{"changelog":{"id":"changelog","title":"Changelog","description":"Jitter 2.4.0 (08-10-2024)","sidebar":"tutorialSidebar"},"demo/jitterdemo":{"id":"demo/jitterdemo","title":"Overview","description":"Jitter Demo is a 3D renderer which shows the capabilities of Jitter Physics.","sidebar":"tutorialSidebar"},"documentation/00unmanaged-memory":{"id":"documentation/00unmanaged-memory","title":"Unmanaged Memory","description":"The constructor of the world class takes three optional arguments, each with quite large default values:","sidebar":"tutorialSidebar"},"documentation/01world-entities":{"id":"documentation/01world-entities","title":"World Entities","description":"For a more detailed description of the entities of a world, namely Islands, Shapes, RigidBodies, Constraints, and Arbiters, refer to the corresponding documentation pages.","sidebar":"tutorialSidebar"},"documentation/02simulation-step":{"id":"documentation/02simulation-step","title":"Simulation Step","description":"Call world.Step(float dt, bool multiThread = true) to simulate a time step of length dt. Every time world.Step is called, the following phases are performed in the engine:","sidebar":"tutorialSidebar"},"documentation/03raycasting":{"id":"documentation/03raycasting","title":"Ray Casting","description":"Retrieve information about where a ray, defined by an origin and a direction, hits a target. Generally, the actual hit point can be calculated using the fraction value returned by the appropriate functions using the formula:","sidebar":"tutorialSidebar"},"documentation/04contact-generation":{"id":"documentation/04contact-generation","title":"Contact Generation","description":"Jitter exclusively uses algorithms based on the Minkowski sum to detect collisions (available in the NarrowPhase class), i.e., there is no explicit code for the collision of two boxes, for example.","sidebar":"tutorialSidebar"},"intro":{"id":"intro","title":"Jitter Physics 2","description":"You will find tutorials and documentation here. Work in progress. You can help","sidebar":"tutorialSidebar"},"quickstart/hello-world":{"id":"quickstart/hello-world","title":"Hello World","description":"We will now add physics to the scene. We do this by creating a new instance of the World class and adding several rigid bodies to it.","sidebar":"tutorialSidebar"},"quickstart/project-setup":{"id":"quickstart/project-setup","title":"Project Setup","description":"Requirements","sidebar":"tutorialSidebar"},"quickstart/render-loop":{"id":"quickstart/render-loop","title":"Setting Up a Render Loop","description":"The first thing we need to do is to familiarize ourselves a bit with Raylib_cs. Replace the content of Program.cs with the following code:","sidebar":"tutorialSidebar"},"webasm":{"id":"webasm","title":"Web demo","description":"A demo scene showing Jitter2 running in the browser (size 14MB).","sidebar":"tutorialSidebar"}}}}')}}]);