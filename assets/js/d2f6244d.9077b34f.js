"use strict";(self.webpackChunkjitterphysics=self.webpackChunkjitterphysics||[]).push([[149],{3905:(e,t,n)=>{n.d(t,{Zo:()=>p,kt:()=>m});var r=n(7294);function o(e,t,n){return t in e?Object.defineProperty(e,t,{value:n,enumerable:!0,configurable:!0,writable:!0}):e[t]=n,e}function a(e,t){var n=Object.keys(e);if(Object.getOwnPropertySymbols){var r=Object.getOwnPropertySymbols(e);t&&(r=r.filter((function(t){return Object.getOwnPropertyDescriptor(e,t).enumerable}))),n.push.apply(n,r)}return n}function i(e){for(var t=1;t<arguments.length;t++){var n=null!=arguments[t]?arguments[t]:{};t%2?a(Object(n),!0).forEach((function(t){o(e,t,n[t])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(n)):a(Object(n)).forEach((function(t){Object.defineProperty(e,t,Object.getOwnPropertyDescriptor(n,t))}))}return e}function l(e,t){if(null==e)return{};var n,r,o=function(e,t){if(null==e)return{};var n,r,o={},a=Object.keys(e);for(r=0;r<a.length;r++)n=a[r],t.indexOf(n)>=0||(o[n]=e[n]);return o}(e,t);if(Object.getOwnPropertySymbols){var a=Object.getOwnPropertySymbols(e);for(r=0;r<a.length;r++)n=a[r],t.indexOf(n)>=0||Object.prototype.propertyIsEnumerable.call(e,n)&&(o[n]=e[n])}return o}var c=r.createContext({}),s=function(e){var t=r.useContext(c),n=t;return e&&(n="function"==typeof e?e(t):i(i({},t),e)),n},p=function(e){var t=s(e.components);return r.createElement(c.Provider,{value:t},e.children)},u="mdxType",d={inlineCode:"code",wrapper:function(e){var t=e.children;return r.createElement(r.Fragment,{},t)}},f=r.forwardRef((function(e,t){var n=e.components,o=e.mdxType,a=e.originalType,c=e.parentName,p=l(e,["components","mdxType","originalType","parentName"]),u=s(n),f=o,m=u["".concat(c,".").concat(f)]||u[f]||d[f]||a;return n?r.createElement(m,i(i({ref:t},p),{},{components:n})):r.createElement(m,i({ref:t},p))}));function m(e,t){var n=arguments,o=t&&t.mdxType;if("string"==typeof e||o){var a=n.length,i=new Array(a);i[0]=f;var l={};for(var c in t)hasOwnProperty.call(t,c)&&(l[c]=t[c]);l.originalType=e,l[u]="string"==typeof e?e:o,i[1]=l;for(var s=2;s<a;s++)i[s]=n[s];return r.createElement.apply(null,i)}return r.createElement.apply(null,n)}f.displayName="MDXCreateElement"},1658:(e,t,n)=>{n.r(t),n.d(t,{assets:()=>c,contentTitle:()=>i,default:()=>d,frontMatter:()=>a,metadata:()=>l,toc:()=>s});var r=n(7462),o=(n(7294),n(3905));const a={sidebar_position:2},i="Setting Up a Render Loop",l={unversionedId:"quickstart/render-loop",id:"quickstart/render-loop",title:"Setting Up a Render Loop",description:"The first thing we need to do is to familiarize ourselves a bit with Raylib_cs. Replace the content of Program.cs with the following code:",source:"@site/docs/01_quickstart/01-render-loop.md",sourceDirName:"01_quickstart",slug:"/quickstart/render-loop",permalink:"/jitterphysics2/docs/quickstart/render-loop",draft:!1,editUrl:"https://github.com/notgiven688/jitterphysics2/tree/main/docs/docs/01_quickstart/01-render-loop.md",tags:[],version:"current",sidebarPosition:2,frontMatter:{sidebar_position:2},sidebar:"tutorialSidebar",previous:{title:"Project Setup",permalink:"/jitterphysics2/docs/quickstart/project-setup"},next:{title:"Hello World",permalink:"/jitterphysics2/docs/quickstart/hello-world"}},c={},s=[],p={toc:s},u="wrapper";function d(e){let{components:t,...a}=e;return(0,o.kt)(u,(0,r.Z)({},p,a,{components:t,mdxType:"MDXLayout"}),(0,o.kt)("h1",{id:"setting-up-a-render-loop"},"Setting Up a Render Loop"),(0,o.kt)("p",null,"The first thing we need to do is to familiarize ourselves a bit with Raylib_cs. Replace the content of ",(0,o.kt)("inlineCode",{parentName:"p"},"Program.cs")," with the following code:"),(0,o.kt)("pre",null,(0,o.kt)("code",{parentName:"pre",className:"language-cs",metastring:"Program.cs showLineNumbers","Program.cs":!0,showLineNumbers:!0},'using System.Numerics;\nusing Raylib_cs;\nusing static Raylib_cs.Raylib;\n\nstatic Texture2D GenCheckedTexture(int size, int checks, Color colorA, Color colorB)\n{\n    Image imageMag = GenImageChecked(size, size, checks, checks, colorA, colorB);\n    Texture2D textureMag = LoadTextureFromImage(imageMag);\n    UnloadImage(imageMag);\n    return textureMag;\n}\n\n// Set a hint for anti-aliasing\nSetConfigFlags(ConfigFlags.FLAG_MSAA_4X_HINT);\n\n// Initialize a 1200x800 px window with a title\nInitWindow(1200, 800, "BoxDrop Example");\n\n// Dynamically create a plane model\nTexture2D texture = GenCheckedTexture(10, 1,  Color.LIGHTGRAY, Color.GRAY);\nModel planeModel = LoadModelFromMesh(GenMeshPlane(10, 10, 10, 10));\nSetMaterialTexture(ref planeModel, 0, MaterialMapIndex.MATERIAL_MAP_DIFFUSE, ref texture);\n\n// Create a camera\nCamera3D camera = new ()\n{\n    position = new Vector3(-20.0f, 8.0f, 10.0f),\n    target = new Vector3(0.0f, 4.0f, 0.0f),\n    up = new Vector3(0.0f, 1.0f, 0.0f),\n    fovy = 45.0f,\n    projection = CameraProjection.CAMERA_PERSPECTIVE\n};\n\n// Set a target of 100 fps\nSetTargetFPS(100);\n\n// Simple render loop\nwhile (!WindowShouldClose())\n{\n    BeginDrawing();\n    ClearBackground(Color.BLUE);\n\n    BeginMode3D(camera);\n\n    DrawModel(planeModel, Vector3.Zero, 1.0f, Color.WHITE);\n\n    EndMode3D();\n    DrawText($"{GetFPS()} fps", 10, 10, 20, Color.WHITE); \n\n    EndDrawing();\n}\n\nCloseWindow();\n')),(0,o.kt)("p",null,"Running your program should now display a plane:"),(0,o.kt)("p",null,(0,o.kt)("img",{alt:"plane",src:n(5539).Z,width:"1193",height:"792"})),(0,o.kt)("p",null,"We will add some physically simulated boxes in the next chapter."))}d.isMDXComponent=!0},5539:(e,t,n)=>{n.d(t,{Z:()=>r});const r=n.p+"assets/images/raylibplane-4a68c1c8056847ef1ae8f6fd8af1fd5a.png"}}]);